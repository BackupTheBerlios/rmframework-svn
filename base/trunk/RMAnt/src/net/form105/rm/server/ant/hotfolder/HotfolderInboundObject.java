/*
 * Copyright (c) 2011, form105 Heiko Kundlacz
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.form105.rm.server.ant.hotfolder;

import java.io.File;
import java.util.UUID;


/**
 * A hotfolder object which represents informations about the incoming file. The build filename is predefined and
 * is named like the standard build file ant is looking for. The workflow id is generated by a unique id as 
 * this is used often in the software lifecycle. For each incoming file a temporary build folder is generated. 
 * @author heikok
 *
 */
public class HotfolderInboundObject implements IInboundObject {
	
	private final String id;
	private String hotfolderName;
	private String buildTempFolderName;
	private String buildFileName;
	private String inboundFileName;
	
	public HotfolderInboundObject(String tempFolder) {
		this.id = UUID.randomUUID().toString();
		this.buildTempFolderName = tempFolder + File.separator + id;
		this.buildFileName = buildTempFolderName + File.separator + "build.xml";
	}
	
	/* (non-Javadoc)
	 * @see net.form105.rm.server.ant.IInboundObject#getId()
	 */
	public String getId() {
		return id;
	}
	
	/* (non-Javadoc)
	 * @see net.form105.rm.server.ant.IInboundObject#getWorkflowId()
	 */
	public String getWorkflowId() {
		return "wf_"+id;
	}
	
	public String getHotfolderName() {
		return hotfolderName;
	}
	
	public void setHotfolderName(String hotfolderName) {
		this.hotfolderName = hotfolderName;
	}
	
	public String getBuildTempFolderName() {
		return buildTempFolderName;
	}
	
	/**
	 * 
	 * @param folderName
	 */
	public void setBuildTempFolderName(String folderName) {
		this.buildTempFolderName = folderName;
	}
	
	/**
	 * Getting the name of the inbound file
	 * @return
	 */
	public String getInboundFilenName() {
		return inboundFileName;
	}
	
	/**
	 * Setting the name of the inbound file
	 * @param inboundFileName
	 */
	public void setInboundFileName(String inboundFileName) {
		this.inboundFileName = inboundFileName;
	}
	
	/**
	 * Build file path in the temp folder
	 * @return
	 */
	public String getBuildFileName() {
		return buildFileName;
	}
	
	

}
